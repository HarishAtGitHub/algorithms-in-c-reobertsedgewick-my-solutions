h3. 1.3.. Describe a simple method for counting the number of sets remaining after using the union and find operations to solve the connectivity problem as described in the text.

h4. Pseudocode :

giving a solution which can just use a map. (since at this point of the chapter we have not learnt anything else)
<pre>
step 1 : for the first given link pair 
         set each of the element as key and set value as 1 . this value is the group number

step 2 : i/p the next pair (i,j)
step 3 : for each element in the pair given in step 2 . get the group number (get the valur given the key)
         A = group number of i 
         B = group number of j
          if A is null AND B is null: ( it means the numbers were not encountered before )
            set both the numbers i and j in the map as new keys and set new group number (which is the max of values in map + 1)
          else if (A is null AND B is not null) OR (A is not null AND B is null) : (it means one of the element was encountered before , so elements in this link will also belong to the same group as that of the not null element)
            set the number for which group num is null as key in map with value as which ever is not null in A , B
          else (case where both numbers where encountered before)
            if A != B ( it means that both belong to separate groups so far but not anymore)
              find max(A,B) and set all the keys that have value max(A,B) to min(A,B)
            if A = B (it means the link between both were identified even before)
              do nothing

run sets 2 and 3 for each input pair indicating link.

Result : Max of the keys in the map is the value of the number of sets remaining.



</pre>

h4. Where did we use the *union find* ? the question asks for it right ?

Yes we did . 
We did do *FIND* by searching for the elements group ID . and obtained A,B in step 3 .
We did do *UNION* inside the if else block in step 3 .
It does not appear obvious as we just managed with a map .

h4. Example 
1-2, 2-7, 3-4, 4-8, 10-11, 11-15, 1-15, 1-7, 7-11

| Elements | Group No |
| 1        | 1        |
| 2        | 1        |
| 7        | 1        |
| 3        | 2        |
| 4        | 2        |
| 8        | 2        |
| 10       | 3 -> 1   |
| 11       | 3 -> 1   |
| 15       | 3 -> 1   |

Answer = max of group no = 2 = number of sets remaining = number of clusters

Note : to retain the connection information too , then we should not split elements and store , instead the key can be a tuple(i,j) as such.

Now the new table will be like

| link     | Group No  |
| (1,2)    | 1         |
| (2,7)    | 1         |
| (3,4)    | 2         |
| (4,8)    | 2         |
| (10,11)  | 3 -> 1    |
| (11,15)  | 3 -> 1    |
| (1,15)   | 1         |
| (1,7)    | 1         |
| (7,11)   | 1         |

Note : here the link information is retained . but the redundant elements are given place in the map.

h4. Applications

Find the number of clusters given information about each and every link separately .
